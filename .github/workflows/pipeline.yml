name: CI Checks

on:
  push:
    branches:
      - main
jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19
      - name: Check out Go code into the the Go module directory
        uses: actions/checkout@v3
      - name: Run Tests
        run: make test
      - name: Coverage Check
        run: make coverage
      - name: Generate Report
        run: make report
      - name: Copy Files
        run: |
          mkdir reports
          cp coverage.html reports/.
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: reports
  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19
      - name: Check out Go code into the Go module directory
        uses: actions/checkout@v3
      - name: Build
        run: make build
      - name: Copy Files
        run: |
              mkdir artifacts
              cp api artifacts/.
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: artifacts
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download binary
        uses: actions/download-artifact@v1
        with:
          name: api
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Still in experimental phase
          draft: true
          prerelease: true
      - name: Upload Release Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./api.zip
          asset_name: api.zip
          asset_content_type: application/zip
