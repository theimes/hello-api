name: CI Checks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - "v*"
jobs:
  test:
    name: Test Application
    needs: 
      - vet-check
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19
      - name: Check out Go code into the the Go module directory
        uses: actions/checkout@v3
      - name: Run Tests
        run: make test
      - name: Coverage Check
        run: make coverage
      - name: Generate Report
        run: make report
      - name: Copy Files
        run: |
          mkdir reports
          cp coverage.html reports/.
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: reports
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Check out Go code into the the Go module directory
        uses: actions/checkout@v3
      - name: Go mod tidy
        run: go mod tidy
      - name: Lint
        uses: golangci/golangci-lint-action@v3
  format-check:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19
      - name: Check out Go code into the Go module directory
        uses: actions/checkout@v3
      - name: Run format Check
        run: make check-format
  vet-check:
    name: Vet check
    needs: format-check
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19
      - name: Check out Go code into the Go module directory
        uses: actions/checkout@v3
      - name: Vet
        run: go vet ./...
  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19
      - name: Check out Go code into the Go module directory
        uses: actions/checkout@v3
      - name: Build
        run: make build
      - name: Copy Files
        run: |
              mkdir artifacts
              cp api artifacts/.
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: artifacts
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download binary
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Still in experimental phase
          draft: true
          prerelease: true
      - name: Upload Release Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./api
          asset_name: api
          asset_content_type: application/octet-stream
  deploy-function:
    name: Deploy FaaS
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          service_account: 'hello-api@snappy-benefit-374514.iam.gserviceaccount.com'
      - name: Deploy function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@v1.0.0
        with:
          name: translate
          entry_point: Translate
          runtime: go119
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/hello"
  deploy-pass:
    name: Deploy PaaS
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: 'read'
      id-token: 'write'
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          service_account: 'hello-api@snappy-benefit-374514.iam.gserviceaccount.com'
      - name: Deploy App
        id: deploypaas
        uses: google-github-actions/deploy-appengine@v1.1.0
      - id: test
        run: curl "${{ steps.deploypaas.outputs.url }}/translate/hello"